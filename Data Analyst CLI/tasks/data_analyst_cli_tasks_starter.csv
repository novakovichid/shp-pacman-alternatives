Title,Body
Подготовка служебных каталогов,"Создать каталоги data/, logs/ и reports/ при запуске приложения. Обновить Settings и CliApplication для инициализации директорий. Результат: после python main.py каталоги существуют без ошибок."
Расширение модели DataRow,"Добавить методы доступа к значениям по ключу и безопасное обновление данных в DataRow. Результат: объект строки позволяет читать и изменять значения без прямого изменения исходного словаря."
Расширение ColumnStats,"Реализовать методы register_value, register_missing и finalize для подсчёта средней величины. Результат: ColumnStats аккумулирует данные и вычисляет метрики."
Реализация DataTable.load_rows,"Очистить прежние данные, загрузить новые DataRow и обновить список столбцов. Результат: таблица содержит актуальные строки и названия колонок."
Метод DataTable.column_names,"Возвращать копию списка колонок даже для пустой таблицы. Результат: вызов column_names() выдаёт актуальный перечень столбцов."
Метод DataTable.summarize,"Использовать ColumnStats для подсчёта числовой статистики и пропусков. Результат: метод возвращает заполненный объект ColumnStats."
Метод DataTable.filter_rows,"Принимать предикат и возвращать новый список DataRow без изменения исходной коллекции. Результат: фильтрация работает без побочных эффектов."
CsvDatasetReader.load,"Использовать csv.DictReader для чтения файла и создавать DataRow. Результат: метод возвращает список строк или пустой список без ошибок."
CsvDatasetReader.detect_columns,"Прочитать заголовок CSV и вернуть список названий колонок. Результат: метод корректно определяет имена столбцов."
ReportWriter.save_summary,"Создавать reports/summary.txt с форматированными строками статистики и кодировкой UTF-8. Результат: файл summary.txt содержит агрегированные показатели."
ReportWriter.save_missing_report,"Сформировать reports/missing.txt с подсчётом пропусков и предупреждениями при доле >20%. Результат: отчёт описывает проблемы с пропусками."
ReportWriter.save_filtered_rows,"Сохранять выбранные строки с разделителем табуляции и заголовком. Результат: пользователь получает текстовый файл с отфильтрованными данными."
DataAnalysisService.load_dataset,"Загрузить CSV через CsvDatasetReader и передать строки в DataTable.load_rows. Результат: сервис содержит таблицу и список столбцов."
DataAnalysisService.available_columns,"Возвращать названия столбцов через DataTable.column_names и обрабатывать отсутствие данных. Результат: метод выдаёт актуальный список или пустой массив."
DataAnalysisService.compute_summary,"Делегировать DataTable.summarize и обрабатывать ошибки отсутствующего столбца. Результат: возвращается объект ColumnStats."
DataAnalysisService.filter_rows,"Применять DataTable.filter_rows с предикатом равенства без учёта регистра. Результат: сервис возвращает подходящие строки."
DataAnalysisService.export_reports,"Вызывать методы ReportWriter для summary, missing и экспорта фильтра. Результат: метод возвращает пути созданных файлов."
CommandLineInterface.run,"Настроить argparse с флагами --file, --summary, --column, --filter и вызывать сервисные методы. Результат: утилита реагирует на аргументы и печатает сообщения."
Обработка отсутствия файла,"Перехватывать ошибки чтения CSV и выводить подсказку с примером корректного пути. Результат: программа сообщает о проблеме без трассировки."
Команда вывода структуры,"Добавить флаг --info для вывода количества строк и списка столбцов. Результат: пользователь видит структуру набора данных."
Логирование операций,"Настроить logging для записи действий в logs/app.log. Результат: после анализа лог содержит записи о ключевых событиях."
Отчёт stats.txt,"Сформировать reports/stats.txt с количеством строк, столбцов и распределением типов. Результат: файл содержит краткую сводку набора."
Поддержка разделителя точка с запятой,"Добавить аргумент --delimiter и передавать значение в CsvDatasetReader. Результат: утилита работает с CSV на запятой и точке с запятой."
Экспорт результата фильтрации,"Реализовать флаг --export-filter и сохранять строки через ReportWriter.save_filtered_rows. Результат: фильтрованные данные пишутся в файл по шаблону имени."
Интерактивный режим,"При отсутствии аргументов запускать текстовое меню с командами загрузки, статистики и выхода. Результат: пользователь управляет анализом шаг за шагом."
